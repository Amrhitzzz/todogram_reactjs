{"version":3,"sources":["component/Login.js","component/Todolists.js","component/Clock.js","component/Todo.js","component/Error.js","App.js","index.js"],"names":["Login","props","useState","userName","setuserName","passWord","setpassWord","alertmsg","setalertmsg","msginfo","setmsginfo","useEffect","localStorage","getItem","login","className","onSubmit","e","preventDefault","authenticate","type","id","placeholder","onChange","target","value","required","autofocus","Todolists","val","isCompleted","todolist","style","fontStyle","fontSize","todayDate","backgroundColor","isHearted","onClick","newArray","todonotes","addnotes","fillingHeart","Checkbox","disabled","onDelete","Clock","date","Date","toLocaleTimeString","currTime","updateTime","setInterval","Todo","setTodolist","notes","deleteItems","oldItems","filter","arrElem","index","length","logout","textAlign","margin","name","rows","cols","today","getFullYear","getMonth","getDate","time","getHours","getMinutes","getSeconds","newItem","addbtn","map","Error","height","color","to","App","loginStatus","setloginStatus","isTokenExpire","timeNow","setHours","tokenValidityCheck","console","log","parse","timeNowII","setItem","removeItem","exact","path","render","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.8718b33e.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst Login = (props) => {\r\n  const [userName, setuserName] = useState(\"\");\r\n  const [passWord, setpassWord] = useState(\"\");\r\n\r\n  // alert msg \r\n  const [alertmsg, setalertmsg] = useState(false);\r\n  const [msginfo, setmsginfo] = useState(\"\");\r\n\r\n  const authenticate = (e) => {\r\n    e.preventDefault();\r\n    let defaultuser = \"admin\",\r\n      defaultpass = \"adminzz\";\r\n    if (userName !== \"\" && passWord !== \"\") {\r\n      if (userName === defaultuser && passWord === defaultpass) {\r\n        setalertmsg(false);\r\n        props.login();\r\n      } else {\r\n       setalertmsg(true);\r\n        setmsginfo(\"Wrong Password\");\r\n      }\r\n    } else {\r\n      setalertmsg(true);\r\n      setmsginfo(\"username and password cannot be empty\")\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"loginStatus\")) {\r\n      props.login();\r\n    }\r\n  }, [props.login]);\r\n\r\n\r\n  return (\r\n    <>\r\n      <form className=\"form-signin login_form\" onSubmit={(e) => authenticate(e)}>\r\n        <h2 className=\"loginform_heading\">ToDO Gram</h2>\r\n         <input type=\"text\" id=\"inputEmail\" className=\"form-control mt-3\" placeholder=\"username\" onChange={(e) => setuserName(e.target.value)} value={userName} required autofocus />\r\n        <input type=\"password\" id=\"inputPassword\" className=\"form-control mt-3\" placeholder=\"Password\" onChange={(e) => setpassWord(e.target.value)} value={passWord} required /> \r\n   \r\n        <button className=\"btn btn-lg btn-primary btn-block mt-3\" type=\"submit\">Sign in</button>\r\n        {alertmsg && <div className=\"alert alert-danger mt-3\">{msginfo}</div>}\r\n        <p className=\"mt-3 mb-1 text-muted\">&copy; 2020-2022</p>\r\n        \r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Login;","import React, { useState } from 'react'\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\n\r\nfunction Todolists(props) {\r\n\r\n\r\n  //filling heart\r\n  const fillingHeart = (id) => {\r\n    let newArray = [...props.todonotes]\r\n\r\n    if (newArray[id].isHearted) {\r\n      newArray[id].isHearted = false;\r\n    } else {\r\n      newArray[id].isHearted = true;\r\n    }\r\n\r\n    props.addnotes(newArray);\r\n\r\n  }\r\n\r\n  const Checkbox = (id) => {\r\n    let newArray = [...props.todonotes]\r\n    if (newArray[id].isCompleted) {\r\n      newArray[id].isCompleted = false;\r\n    } else {\r\n      newArray[id].isCompleted = true;\r\n\r\n    }\r\n\r\n    props.addnotes(newArray);\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"h4 text-capitalize\">\r\n        {props.val.isCompleted ? <>{props.id + 1 + \".\" + \" \"}<s>{props.val.todolist}</s> </> : props.id + 1 + \".\" + \" \" + props.val.todolist}\r\n      </div>\r\n\r\n      <h6 style={{ fontStyle: \"italic\", fontSize: \"12px\" }}>{props.val.todayDate}</h6>\r\n\r\n      <button className=\"p-0\" style={{ backgroundColor: props.val.isHearted ? \"green\" : \"#E1DFE1\" }} onClick={() => fillingHeart(props.id)}>\r\n        <FavoriteBorderIcon />\r\n      </button>\r\n\r\n      <button className=\"p-0 mx-2\" style={{ backgroundColor: props.val.isCompleted ? \"green\" : \"#E1DFE1\" }} onClick={() => Checkbox(props.id)} >\r\n        <CheckBoxIcon />\r\n      </button>\r\n\r\n      <button disabled={props.val.isHearted && true} className=\"p-0\" onClick={() => props.onDelete(props.id)}>\r\n        <DeleteForeverIcon />\r\n      </button>\r\n\r\n\r\n\r\n    </>\r\n\r\n\r\n  )\r\n}\r\n\r\nexport default Todolists;\r\n","import React, { useState } from 'react';\r\n\r\nconst Clock = () => {\r\n\tlet date = new Date().toLocaleTimeString();\r\n\tlet [currTime, updateTime] = useState(date);\r\n\t// console.log(date)\r\n\r\n\tconst changeTimePerSec = () => {\r\n        date = new Date().toLocaleTimeString();\r\n\t\tupdateTime(date);\r\n\t}\r\n    setInterval(changeTimePerSec, 1000);\r\n\r\n    return (\r\n        <>\r\n        <h1 className=\"clock_style\"> {currTime} </h1>\r\n        </>\r\n    );\r\n}\r\n    \r\n    export default Clock;","import React, { useState } from \"react\";\r\nimport Todolists from \"./Todolists\";\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport Clock from \"./Clock\";\r\nimport \"../css/clock.css\";\r\n\r\nconst Todo = (props) => {\r\n  const [todolist, setTodolist] = useState(\"\");\r\n  const [notes, addnotes] = useState([]);\r\n\r\n  // adding items to array \r\n  const addbtn = () => {\r\n    if (todolist !== \"\") {\r\n        let today = new Date();\r\n        let date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\r\n        let time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n        let dateTime = date+' '+time;\r\n\r\n      let newItem = {\r\n        todolist,\r\n        isHearted: false,\r\n        isCompleted: false,\r\n        todayDate : dateTime\r\n      }\r\n      addnotes([...notes, newItem]);\r\n      setTodolist(\"\");\r\n    }\r\n\r\n  }\r\n\r\n  // logout button function \r\n  const logoutbtn = () => {\r\n    props.logout();\r\n  };\r\n\r\n  // deleting items function \r\n  const deleteItems = (id) => {\r\n    addnotes((oldItems) => {\r\n      return oldItems.filter((arrElem, index) => {\r\n        return index !== id;\r\n      });\r\n    });\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"todo_header\" >\r\n        <span className=\"alert alert-dark\">Todo: {notes.length} </span>\r\n        <Clock />\r\n        <button className=\"btn btn-secondary\" onClick={() => logoutbtn()}><ExitToAppIcon /></button>\r\n      </div>\r\n\r\n     \r\n      <div className=\"todo_main\" >\r\n        <h2 style={{textAlign:\"center\"}}>ToDo Gram</h2>\r\n        <h6 style={{textAlign:\"center\"}}>Your todo lists</h6>\r\n\r\n\r\n        <div className=\"form-group mt-3\" style={{textAlign:\"center\"}}>\r\n          <textarea className=\"form-group form-control col-10\" style={{margin:\"auto\"}}\r\n            placeholder=\" write something...\"\r\n            name=\"textareaname\"\r\n            rows=\"4\"\r\n            cols=\"90\"\r\n            onChange={(e) => setTodolist(e.target.value)}\r\n            value={todolist}>\r\n          </textarea>\r\n      \r\n          <button type=\"submit\" className=\"btn btn-secondary mt-3\" onClick={() => addbtn()}>Add Note</button>\r\n          <button className=\"btn btn-danger mx-2 mt-3\" onClick={() => addnotes([])}>Clear All</button>\r\n        </div>\r\n\r\n        {/* list items mappping area  */}\r\n        <div>\r\n          {\r\n            notes.map((val, index) => {\r\n              return (\r\n                <div className=\"todo_li_items\" key={index} >\r\n                  <Todolists val={val} id={index} onDelete={deleteItems} todonotes={notes} addnotes={addnotes}/>\r\n                </div>\r\n              )\r\n            })\r\n          }\r\n        </div>\r\n        {/* ---end of map area---  */}\r\n\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nfunction Error() {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"alert alert-danger mt-2\" style={{height:\"100vh\", color:\"black\"}}>\r\n               <h1>Page Not available.....</h1>\r\n               <h6>Check Your Url and try again</h6>\r\n               <h6>ThankYou !!!!</h6>\r\n            <button className=\"btn btn-primary\">\r\n                <NavLink style={{color:\"white\"}} to=\"/\">Go Back</NavLink>\r\n            </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error;\r\n","import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\nimport Login from \"./component/Login\";\nimport Home from \"./component/Todo\";\nimport Error from \"./component/Error\";\nimport \"../src/css/index.css\";\n\nconst App = () => {\n  const [loginStatus, setloginStatus] = useState(false);\n\n\n  // login token validity check\n  const isTokenExpire = () => {\n    const timeNow = new Date();\n    timeNow.setHours(0, 0, 0, 0);\n    const tokenValidityCheck = localStorage.getItem(\"token\");\n    console.log(tokenValidityCheck)\n    if (Date.parse(timeNow) < Date.parse(tokenValidityCheck)) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n// ------ break ------\n\n\n  // login button event \n  const login = () => {\n    setloginStatus(true);\n    const timeNowII = new Date();\n    timeNowII.setHours(timeNowII.getHours() + 24);\n\n    localStorage.setItem(\"loginStatus\", true);\n    localStorage.setItem(\"token\", timeNowII);\n  };\n// ------ break ------\n\n\n\n  // logout button event \n  const logout = () => {\n    setloginStatus(false);\n    localStorage.removeItem(\"loginStatus\");\n  };\n// ------ break ------\n\n\n\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\"\n          render={() => loginStatus && isTokenExpire() ? <Redirect to=\"/todo\" /> : <Login login={login} />\n          } />\n\n        <Route exact path=\"/todo\"\n          render={() => loginStatus && isTokenExpire() ? <Home logout={logout} /> : <Redirect to=\"/\" />} />\n          <Route component={Error} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />,document.getElementById('root'));"],"sourceRoot":""}